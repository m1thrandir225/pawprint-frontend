# .github/workflows/docker-publish.yml (in pawprint-frontend repo)
name: Build and Push Frontend Docker Image

# Controls when the workflow will run
on:
  push:
    branches: ['master'] # Trigger on push to the main branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Define the image name using your GitHub username and repo name
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/pawprint-frontend # Or your specific repo name if different

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Need read access to checkout the code
      packages: write # Need write access to push images to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} # Use the built-in token for GHCR auth

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # Creates tags: latest, git commit sha
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repo
          file: ./Dockerfile # Path to your frontend Dockerfile (assuming it's at the root)
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Pass build arguments using secrets!
          build-args: |
            VITE_Maps_API_KEY=${{ secrets.VITE_Maps_API_KEY }}
            VITE_APP_ENVIROMENT=production # Hardcode for main branch builds
            VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}
            VITE_BACKEND_URL=${{ secrets.VITE_PROD_BACKEND_URL }} # Use the production URL secret
          # Enable build cache (optional, speeds up subsequent builds)
          cache-from: type=gha
          cache-to: type=gha,mode=max
